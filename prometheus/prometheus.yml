# my global config
global:

  # 拉取目標的默認時間間隔
  # Set the scrape interval to every 15 seconds. Default is every 1 minute.
  scrape_interval:     3s 

  # 執行規則的時間間隔
  # Evaluate rules every 15 seconds. The default is every 1 minute.
  evaluation_interval: 3s 

  # scrape_timeout is set to the global default (10s)拉取一個目標原子的時間.
  # external_labels：額外的屬性，會添加到拉取的數據並存到數據庫中

# Alertmanager configuration
alerting:
  alertmanagers:
  - static_configs:
    - targets: ['alertmanager:9093']
      # - alertmanager:9093

# Load rules once and periodically evaluate them according to the global 'evaluation_interval'.
rule_files:
  - "alert.yml"
  # - "first_rules.yml"
  # - "second_rules.yml"

# A scrape configuration containing exactly one endpoint to scrape:
# Here it's Prometheus itself.
scrape_configs:
  # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config.
  # 任務名稱
  - job_name: 'prometheus'
    # Override the global default and scrape targets from this job every 5 seconds.
    
    scrape_interval: 3s
    static_configs:
      - targets: ['localhost:9090']

  # - job_name: 'cadvisor'
  #   # Override the global default and scrape targets from this job every 5 seconds.
  #   scrape_interval: 5s
  #   static_configs:
  #   - targets: ['cadvisor:8080']

  - job_name: 'node_exporter'
    # Override the global default and scrape targets from this job every 5 seconds.
    # metrics_path defaults to '/metrics'
    # scheme defaults to 'http'.
    scrape_interval: 3s
    static_configs:
      - targets: ['node_exporter:9100']


  - job_name: 'flask web'
    scrape_interval: 3s
    static_configs:
      - targets: ['web:5000']